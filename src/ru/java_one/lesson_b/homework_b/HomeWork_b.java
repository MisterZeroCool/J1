package ru.java_one.lesson_b.homework_b;
//        5 * Создать квадратный целочисленный массив (количество строк и
//        столбцов одинаковое), заполнить его диагональные элементы едини-
//        цами, используя цикл(ы);
//        6 ** Написать метод, в который передается не пустой одномерный
//        целочисленный массив, метод должен вернуть true если в массиве
//        есть место, в котором сумма левой и правой части массива равны.
//        Примеры:
//        checkBalance([1, 1, 1, || 2, 1]) → true,
//        checkBalance ([2, 1, 1, 2, 1]) → false,
//        checkBalance ([10, || 1, 2, 3, 4]) → true.
//        Абстрактная граница показана символами ||, эти символы в массив не входят.
//        7 *** Написать метод, которому на вход подаётся одномерный массив и
//        число n (может быть положительным, или отрицательным), при этом
//        метод должен циклически сместить все элементы массива на n позиций.
//        8 **** Не пользоваться вспомогательным массивом при решении задачи 7.

import java.lang.reflect.Array;
import java.util.Arrays;

import ru.java_one.lesson_b.Main;

public class HomeWork_b {
    public static void main(String[] args) {
//        1. Задать целочисленный массив, состоящий из элементов 0 и 1.
//        Например: [ 1, 1, 0, 0, 1, 0, 1, 1, 0, 0 ]. Написать метод, заменяющий
//        в принятом массиве 0 на 1, 1 на 0;
//        int[] arr = {1, 1, 0, 0, 1, 0, 1, 1, 0, 0};
//        for(int i = 0; i < arr.length; i++) {
//            if(arr[i] == 1){
//                arr[i] = 0;
//            }else arr[i] = 1;
//        }
//

//        2. Задать пустой целочисленный массив размером 8. Написать метод,
//        который с помощью цикла заполнит его значениями 1 4 7 10 13 16 19 22;
//        int[] arr = new int[8];
//        int b = 1;
//        for(int i = 0; i < arr.length; i++) {
//           arr[i] = b;
//           b+=3;
//        }
//        System.out.println(Arrays.toString(arr));


//        3. Задать массив [ 1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1 ], написать метод,
//        принимающий на вход массив и умножающий числа меньше 6 на 2;
//        int[] arr = {1, 5, 3, 2, 11, 4, 5, 2, 4, 8, 9, 1};
//        for(int i = 0; i < arr.length; i++) {
//            if(arr[i] < 6) {
//                arr[i] = arr[i] *2;
//            }
//        }
//        System.out.println(Arrays.toString(arr));

//        4. Задать одномерный массив. Написать методы поиска в нём минималь-
//        ного и максимального элемента;
//        int[] arr = {4,88,23,47,34,24,8,110,44,53,1001,4759,83476};
//        int max = arr[0];
//        int min = arr[0];
//        for(int i = 1; i < arr.length; i++) {
//            if(max<arr[i]) max = arr[i];
//            if(min>arr[i]) min = arr[i];
//        }
//        System.out.println("Максимальное число "+max);
//        System.out.println("Минимальное число "+min);

//        5. * Создать квадратный целочисленный массив (количество строк и
//        столбцов одинаковое), заполнить его диагональные элементы едини-
//        цами, используя цикл(ы);
        int[][] arr = new int[3][3];
        int i;
        int j;
        for(i = 0; i < arr.length; i++) {
            for(j = 0; j < arr.length; j++) {
            }
            System.out.println(Arrays.toString(arr[i][j]));
        }

    }
}
